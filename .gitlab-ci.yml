stages:
  - build
  - test
  - deploy

Docker E2E:
  stage: build
  image: docker:stable@sha256:fd4d028713fd05a1fb896412805daed82c4a0cc84331d8dad00cb596d7ce3e3a

  services:
    - docker:dind@sha256:9f9a930bc5ec2e000867a87de844cae04590bafe929340e2fae4cb959cf6bc8f

  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest

  only:
    changes:
      - Dockerfile

.base:
  stage: test
  image: $CI_REGISTRY_IMAGE:latest

  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules

  before_script:
    - sudo chown -R user:user /builds/gitlab
    - npm install --no-audit --prefer-offline --progress=false

test:
  extends: .base
  script:
    - npm test

build:
  extends: .base
  script:
    - npm run build
  artifacts:
    paths: [dist, loader, www]
    expire_in: 1 month

pages:
  extends: .base
  stage: deploy
  script:
    - mv www public
  artifacts:
    paths: [public]
  only:
    - master

push:
  stage: deploy
  image: ubuntu:20.04@sha256:64255397e256fd33d6c6ddbc371027093315f9822089a32b8eeb045d83bb91c4
  only:
    - master
  dependencies:
    - build

  before_script:
    - apt update
    - apt install -y git rsync
    - git config --global user.email 'gitlab@xikolo.de'
    - git config --global user.name 'GitLab CI'

  script:
    - git clone -b build https://gitlab-ci:$GITLAB_CI_TOKEN@dev.xikolo.de/gitlab/$CI_PROJECT_PATH.git build
    - rsync --recursive --links --delete --verbose dist/ build/dist/
    - rsync --recursive --links --delete --verbose loader/ build/loader/
    - cd build/
    - git add .
    - git commit -m"Auto-build for $CI_COMMIT_SHA" && git push; true
