WEBVTT
kind: subtitle
language: de
label: Deutsch


1
00:00:05.800 --> 00:00:11.900 A:middle
Willkommen im Kurs Prepare for Your SAP HANA Certification Development Associate.

2
00:00:11.900 --> 00:00:19.436 A:middle
Dies ist Kapitel 2, Prüfungsvorbereitung – Tipps und Tricks. Dort werden wir mehr über den Inhalt sprechen, den

3
00:00:19.436 --> 00:00:25.547 A:middle
Sie prüfen können, und stellen sicher, dass Sie sich mit der erfolgreichen Übertragung der

4
00:00:25.547 --> 00:00:28.399 A:middle
Zertifizierungsprüfung vertraut machen.

5
00:00:28.400 --> 00:00:33.985 A:middle
Obwohl Sie sicherlich alle Kurse durchgehen sollten, und wenn es sich um eine Weile handelt, während Sie eines

6
00:00:33.985 --> 00:00:39.266 A:middle
der früheren Kurse gebraucht haben, dann führen Sie sie erneut durch, um Ihren Speicher aufzufrischen.

7
00:00:39.266 --> 00:00:46.561 A:middle
Ich möchte einige Minuten hier in diesem Kapitel einige wichtige Begriffe hervorheben, die Sie benötigen, um

8
00:00:46.561 --> 00:00:51.966 A:middle
sicherzustellen, dass Sie sich mit der Zertifizierungsprüfung vertraut machen.

9
00:00:51.966 --> 00:01:02.940 A:middle
In erster Linie sind die wichtigsten Architekturänderungen, die wir in der HANA-Entwicklung im Allgemeinen

10
00:01:02.940 --> 00:01:10.499 A:middle
entwickelt haben, besonders mit SAP HANA 1.0 SPS 11 und höher vertraut.

11
00:01:10.500 --> 00:01:15.933 A:middle
Lassen Sie uns einige dieser Fragen hier überprüfen.

12
00:01:15.933 --> 00:01:22.133 A:middle
Zunächst muss der große architektonische Wandel mit der Anwendungsserver-Architektur durchgeführt werden.

13
00:01:22.133 --> 00:01:32.140 A:middle
Gehen Sie daher zurück zu SAP HANA 1.0, SPS 05, um den eingebetteten Anwendungsserver, den XS-Anwendungsserver,

14
00:01:32.140 --> 00:01:35.566 A:middle
in die HANA-Umgebung zu integrieren.

15
00:01:35.566 --> 00:01:43.337 A:middle
Das haben wir ursprünglich getan, um unseren Kunden und unseren Partnern eine Auswahl der Entwicklungsumgebung

16
00:01:43.337 --> 00:01:48.566 A:middle
zu vermitteln, die sich vollständig in SAP HANA selbst entwickeln würde.

17
00:01:48.566 --> 00:01:55.746 A:middle
Sie wissen, dass wir die Möglichkeit haben, den Code-Pushdown und die Förderung des Code-Pushdown-Programms,

18
00:01:55.746 --> 00:02:02.328 A:middle
d.h. das Schreiben möglichst viel von Ihrer Anwendungslogik, in die Lage zu versetzen, einen echten

19
00:02:02.328 --> 00:02:09.641 A:middle
leichtgewichtigen Anwendungsserver einzuführen, der diese Anwendungen ohnehin bereits 80 oder 90 Prozent ihrer

20
00:02:09.641 --> 00:02:16.555 A:middle
Logik in der Datenbank nutzen kann, um die übrige Logik tatsächlich zu erfüllen, und das kleine Teil der

21
00:02:16.555 --> 00:02:23.603 A:middle
Servicefähigkeit und der Webanwendung, ohne dass ein weiterer Anwendungsserver der Architektur hinzugefügt

22
00:02:23.603 --> 00:02:24.800 A:middle
werden muss.

23
00:02:24.800 --> 00:02:32.425 A:middle
Und das hat mehrere Vorteile, von denen eine geringere Gesamtbetriebskosten darstellt, die einfacher, weniger

24
00:02:32.425 --> 00:02:37.533 A:middle
Verwaltungsaufwand und Dinge, die man sich kümmern musste, erleichtern.

25
00:02:37.533 --> 00:02:40.599 A:middle
Und unsere Kunden waren sehr positiv zu dieser Idee gekommen.

26
00:02:40.600 --> 00:02:47.829 A:middle
Vor allem in den leichtesten Szenarien, in denen sie nur sehr schnell einen kleinen Teil der Daten

27
00:02:47.829 --> 00:02:49.600 A:middle
gewährleisten wollten.

28
00:02:49.600 --> 00:02:56.455 A:middle
Was wir jedoch im Laufe der Zeit gesehen haben, ist, dass die einfache, ursprünglich eingeführte Architektur

29
00:02:56.455 --> 00:03:00.899 A:middle
des Anwendungsservers nicht für alle Kundenszenarios skaliert wurde.

30
00:03:00.900 --> 00:03:12.200 A:middle
Die Art des Cloud-Computing hat nicht unbedingt den Vorteil, dass wir uns für die Umstellung auf cloudbasierte

31
00:03:12.200 --> 00:03:14.666 A:middle
Anwendungen einsetzen.

32
00:03:14.666 --> 00:03:19.832 A:middle
Deshalb haben wir eine Chance gesehen, die Architektur neu zu gestalten.

33
00:03:19.833 --> 00:03:28.819 A:middle
Und mit SAP HANA 1.0 SPS 11 haben wir damit begonnen, was wir jetzt als XSA oder SAP HANA Extended Application

34
00:03:28.819 --> 00:03:32.332 A:middle
Services, erweitertes Modell, bezeichnen.

35
00:03:32.333 --> 00:03:36.999 A:middle
Und wir haben das bestehende XS in XS Classic umbenannt.

36
00:03:37.000 --> 00:03:41.833 A:middle
Und wir tun dies, weil beide noch in SAP HANA enthalten sind.

37
00:03:41.833 --> 00:03:47.987 A:middle
Und das ist das erste sehr wichtige Thema. Beachten Sie in diesem Kurs, dass XS Classic noch in Ihrem

38
00:03:47.987 --> 00:03:54.508 A:middle
HANA-2.0-System vorhanden ist. Das HANA-Repository ist weiterhin vorhanden. Das HANA-Studio wird immer noch

39
00:03:54.508 --> 00:03:59.566 A:middle
unterstützt. Tatsächlich bleibt der gesamte Content immer noch, wo er zuvor war.

40
00:03:59.566 --> 00:04:04.299 A:middle
Es befindet sich noch in der alten Umgebung in XS Classic.

41
00:04:04.300 --> 00:04:11.299 A:middle
Da Sie hier sehen, ist die Architektur so unterschiedlich in der neuen Umgebung, dass wir den Prozess des

42
00:04:11.299 --> 00:04:13.833 A:middle
Umzugs nicht automatisieren konnten.

43
00:04:13.833 --> 00:04:22.274 A:middle
Es handelt sich um einen manuellen Prozess und erfordert häufig eine Neugestaltung der Kernarchitektur Ihrer

44
00:04:22.274 --> 00:04:30.871 A:middle
Anwendung, oft des Sicherheitsmodells in Ihrer Anwendung. Die beiden Anwendungsserver werden daher parallel in

45
00:04:30.871 --> 00:04:36.499 A:middle
SAP HANA 1.0 SPS 11 und höher ausgeliefert, die SAP HANA 2.0 enthält.

46
00:04:36.500 --> 00:04:42.063 A:middle
Daher können Sie ein Upgrade auf SAP HANA 2.0 durchführen, und es ist keine störungsbedingte Umstellung auf

47
00:04:42.063 --> 00:04:46.899 A:middle
Ihre bestehenden eigenentwickelten Anwendungen, da sie sich in der alten Umgebung befinden.

48
00:04:46.900 --> 00:04:50.466 A:middle
Was ist jetzt in dieser neuen Umgebung zu nutzen?

49
00:04:50.466 --> 00:04:57.299 A:middle
Zuerst einmal, wir haben uns wirklich angeschaut, was wir in der Cloud-Architektur tun wollten.

50
00:04:57.300 --> 00:05:05.009 A:middle
Vor einigen Jahren wussten wir, dass wir die SAP Cloud Platform auf der Grundlage von Cloud Foundry

51
00:05:05.009 --> 00:05:06.100 A:middle
verschieben.

52
00:05:06.100 --> 00:05:09.500 A:middle
Und wir haben uns auf diese Technologie von Cloud Foundry eingegangen.

53
00:05:09.500 --> 00:05:14.681 A:middle
Es handelt sich um eine Microservicebasierte Architektur, die über mehrere Laufzeiten verfügt, die in ihn

54
00:05:14.681 --> 00:05:19.566 A:middle
integriert werden können, und wir haben viele technologische Vorteile für diese Umgebung gesehen.

55
00:05:19.566 --> 00:05:25.032 A:middle
Also haben wir uns entschieden, SAP HANA XS Advanced On Premise auch für Cloud Foundrys zu nutzen.

56
00:05:25.033 --> 00:05:31.263 A:middle
Dies hat nun einen wirklich großen Vorteil, dass wir die gleiche Kerntechnologie sowohl in der SAP Cloud

57
00:05:31.263 --> 00:05:37.734 A:middle
Platform als auch bei der On Premise verwenden. Dies bedeutet, dass Sie Anwendungen einmal entwickeln können

58
00:05:37.734 --> 00:05:43.666 A:middle
und mit wenig oder gar keinen Code Änderungen in der Cloud und On Premise implementieren können.

59
00:05:43.666 --> 00:05:50.366 A:middle
Dies war eines der wichtigsten Vorteile und Designkriterien für diese neue Entwicklungsumgebung.

60
00:05:50.366 --> 00:05:56.299 A:middle
Nun wäre eines der anderen Kriterien mehr Optionen für die Entwicklungsumgebung.

61
00:05:56.300 --> 00:05:59.300 A:middle
In XS Classic gibt es nur JavaScript.

62
00:05:59.300 --> 00:06:06.541 A:middle
JavaScript basiert auf Mozilla SpiderMonkey, daher ist es ein synchrones JavaScript. Es gibt kein

63
00:06:06.541 --> 00:06:10.199 A:middle
Threading-Modell, es gibt kein Eventing-Modell.

64
00:06:10.200 --> 00:06:17.902 A:middle
Wir wollten also auch weiterhin JavaScript als Programmiersprache unterstützen, die uns einen guten Übergang

65
00:06:17.902 --> 00:06:22.966 A:middle
von XS Classic geben würde, aber auch das, was wir dort unterstützen.

66
00:06:22.966 --> 00:06:25.232 A:middle
Und die Cloud Foundry bietet Tonnen von Optionen.

67
00:06:25.233 --> 00:06:33.066 A:middle
Es gibt mehr als 15 Buildpacks, die die verschiedenen Laufzeiten in der Cloud-Foundry-Umgebung nennen.

68
00:06:33.066 --> 00:06:36.766 A:middle
Wir hatten also über 15 Buildpacks.

69
00:06:36.766 --> 00:06:41.789 A:middle
Wir konnten sie nicht alle unterstützen, damit wir uns selbstverständlich auf ein paar wichtige Punkte für

70
00:06:41.789 --> 00:06:45.533 A:middle
unsere Entwicklung konzentrieren wollten, für die Entwicklung unserer Kunden.

71
00:06:45.533 --> 00:06:53.057 A:middle
Zuerst war JavaScript ein no-brainer, weil wir eine Rückwärtskompatibilität mit der XS-klassischen Umgebung,

72
00:06:53.057 --> 00:06:55.566 A:middle
die JavaScript-basiert war, haben.

73
00:06:55.566 --> 00:07:01.958 A:middle
Wir haben jedoch von Mozilla SpiderMonkey nach Google V8 verschoben, und damit erhalten wir eine vollständige

74
00:07:01.958 --> 00:07:03.366 A:middle
Node.js-Unterstützung.

75
00:07:03.366 --> 00:07:12.198 A:middle
Es bringt das asynchrone Programmiermodell von Node.js, das hochgelöste Programmiermodell, und öffnet sich auch

76
00:07:12.198 --> 00:07:19.997 A:middle
in der Welt von Hunderttausenden von Open-Source-Modulen, die wir in der HANA-Entwicklungsumgebung

77
00:07:19.997 --> 00:07:22.066 A:middle
wiederverwenden können.

78
00:07:22.066 --> 00:07:28.418 A:middle
Es gibt also viele wichtige technische Schichten, auch wenn Sie ein aktueller JavaScript-Entwickler sind, den

79
00:07:28.418 --> 00:07:34.771 A:middle
Sie bereits mit JavaScript XSJS aus der XS-klassischen Umgebung vertraut gemacht haben. In diesen Kursen gibt

80
00:07:34.771 --> 00:07:40.133 A:middle
es immer noch viele Lose, um die Unterschiede zu vermeiden, wenn Sie zu Node.js wechseln.

81
00:07:40.133 --> 00:07:43.033 A:middle
Als Nächstes haben wir auch die Unterstützung für Java eingeführt.

82
00:07:43.033 --> 00:07:48.188 A:middle
Dies ist sinnvoll, da einige unserer Kunden SAP NetWeaver Java migrieren wollten und in etwas standardmäßigem

83
00:07:48.188 --> 00:07:49.466 A:middle
Schritt wechseln wollten.

84
00:07:49.466 --> 00:07:55.799 A:middle
Java bleibt ein gut benutztes Programmiermodell im Unternehmensumfeld.

85
00:07:55.800 --> 00:08:03.229 A:middle
Der größte Unterschied in diesem Java ist jedoch, im Gegensatz zu dem, was wir bei SAP in der Vergangenheit

86
00:08:03.229 --> 00:08:08.299 A:middle
gemacht haben, ist die reine Open-Source-Apache, Tomcat und TomEE Java.

87
00:08:08.300 --> 00:08:15.699 A:middle
Es handelt sich also nicht um NetWeaver Java oder SAP Version von Java, dies ist der Standard Apache Java.

88
00:08:15.700 --> 00:08:19.700 A:middle
Und schließlich alle anderen Buildpacks, über die ich sprach.

89
00:08:19.700 --> 00:08:26.605 A:middle
Sie können sie in dieser Umgebung nutzen, indem Sie Ihre eigene Sprachunterstützung einsetzen, aber wir bieten

90
00:08:26.605 --> 00:08:28.866 A:middle
nicht die Unterstützung für diese.

91
00:08:28.866 --> 00:08:34.966 A:middle
Daher bietet SAP vor allem die primäre Unterstützung für Node.js, JavaScript und Java.

92
00:08:34.966 --> 00:08:39.038 A:middle
Das heißt, wenn Sie ein Problem in diesen Laufzeiten haben, können Sie ein Ticket mit SAP eingeben, und wir

93
00:08:39.038 --> 00:08:40.599 A:middle
werden dafür Korrekturen bereitstellen.

94
00:08:40.600 --> 00:08:47.275 A:middle
Mit der Bringe Your Own Language können Sie eines der anderen Buildpacks, wie Google Go, oder PHP, oder .NET

95
00:08:47.275 --> 00:08:53.765 A:middle
Core verwenden, und wir werden die Tatsache unterstützen, dass sie in der Umgebung gestartet und gestoppt

96
00:08:53.765 --> 00:09:00.132 A:middle
werden. Aber alles andere, die innerhalb dieser Laufzeit zu tun haben, liegt in Ihrer Verantwortung.

97
00:09:00.133 --> 00:09:10.370 A:middle
Jetzt ist interessant, dass wir Python, d. h. derzeit eines der folgenden eigenen Sprachen-Buildpacks, haben,

98
00:09:10.370 --> 00:09:19.763 A:middle
aber mit SAP HANA 2.0, SPS 11, dass wir die Unterstützung für JavaScript und Java in dieser Umgebung

99
00:09:19.763 --> 00:09:21.266 A:middle
unterstützen.

100
00:09:21.266 --> 00:09:27.895 A:middle
Dies zeigt auch das Versprechen im Laufe der Zeit, da bestimmte Sprachen und Laufzeiten immer beliebter werden,

101
00:09:27.895 --> 00:09:34.345 A:middle
und der Kunde oder der Partnerbedarf für sie kann sich dafür einsetzen, dass Sie auch die eigene Sprache auf

102
00:09:34.345 --> 00:09:37.332 A:middle
das primäre unterstützte Modell bringen können.

103
00:09:37.333 --> 00:09:46.122 A:middle
Damit Sie in dieser Umgebung wirklich eine größere Auswahl treffen können und dass Sie natürlich auf alle diese

104
00:09:46.122 --> 00:09:54.832 A:middle
Änderungen und die Zusätze der Java-Umgebung achten wollen, wollten wir aber auch die Skalierung verbessern.

105
00:09:54.833 --> 00:10:01.633 A:middle
Die XS-klassische Umgebung skaliert derzeit derzeit nur mit SAP HANA.

106
00:10:01.633 --> 00:10:08.015 A:middle
Sie können keine zusätzlichen Instanzen des klassischen XS-Engine-Prozesses, der XS-Engine, hinzufügen,

107
00:10:08.015 --> 00:10:10.432 A:middle
unabhängig von einem SAP-HANA-Knoten.

108
00:10:10.433 --> 00:10:16.272 A:middle
In dieser Umgebung wollten wir etwas bauen, das unabhängig von der HANA Datenbank skaliert, das auf einer

109
00:10:16.272 --> 00:10:19.999 A:middle
separaten Hardware installiert werden könnte, wenn Sie es wollen.

110
00:10:20.000 --> 00:10:23.200 A:middle
Es muss nicht auf Ihrer SAP-HANA-Hardware installiert werden.

111
00:10:23.200 --> 00:10:28.438 A:middle
Sie muss nicht auf einer SAP-HANA-zertifizierten Hardware basieren, damit sie auf kostengünstiger Warenhardware

112
00:10:28.438 --> 00:10:29.666 A:middle
installiert werden kann.

113
00:10:29.666 --> 00:10:35.918 A:middle
Sie können also ein Single-Node-HANA-System mit 10 Knoten von XS davor haben. Wenn Sie XS nicht verwenden,

114
00:10:35.918 --> 00:10:42.111 A:middle
können Sie dennoch die Ein-und-One-Box-Erfahrung ausführen, auf der Sie einfach SAP HANA auf dem primären

115
00:10:42.111 --> 00:10:44.766 A:middle
Knoten des SAP-HANA-Clusters installieren.

116
00:10:44.766 --> 00:10:46.799 A:middle
Es handelt sich also um das Beste aus beiden Welten.

117
00:10:46.800 --> 00:10:53.575 A:middle
Wenn Sie möchten, dass Sie das wirklich einfach starten, niedrigen Wartungskosten, nur dort und verfügbar, alle

118
00:10:53.575 --> 00:10:56.566 A:middle
in einem Bereich, haben Sie dies standardmäßig.

119
00:10:56.566 --> 00:11:03.542 A:middle
Wenn Sie jedoch skalieren müssen, wenn Sie mehr verwenden und höhere Staffeloptionen benötigen, können Sie zu

120
00:11:03.542 --> 00:11:06.999 A:middle
diesem Zweck wechseln und weitere Knoten hinzufügen.

121
00:11:07.000 --> 00:11:09.866 A:middle
Sie kann außerhalb der Firewall installiert werden.

122
00:11:09.866 --> 00:11:17.258 A:middle
Sie können jetzt eine Firewall zwischen dem XS-App-Server und der Datenbank ablegen, so dass eine Vielzahl der

123
00:11:17.258 --> 00:11:24.448 A:middle
Sicherheitsarchitektur und der Aufbau und die Skalierung, die jetzt eine dreistufige Architektur ist, viele

124
00:11:24.448 --> 00:11:30.833 A:middle
Anforderungen erfüllen, die wir von unseren Kunden von der alten XS-Umgebung erfahren haben.

125
00:11:30.833 --> 00:11:33.299 A:middle
Es bietet Ihnen viele weitere Möglichkeiten.

126
00:11:33.300 --> 00:11:40.448 A:middle
In der Zertifizierungsprüfung möchten Sie sich mit allen verschiedenen Möglichkeiten der Architektur vertraut

127
00:11:40.448 --> 00:11:43.466 A:middle
machen, die wir mit SAP HANA XS jetzt haben.

128
00:11:43.466 --> 00:11:49.061 A:middle
Und auch der andere Teil davon, wie die Buildpacks, ist die Tatsache, dass es sich um eine

129
00:11:49.061 --> 00:11:51.299 A:middle
Microservices-Architektur handelt.

130
00:11:51.300 --> 00:11:57.630 A:middle
Das bedeutet, dass der Microservice nicht bedeutet, dass er unbedingt klein ist und weniger Ressourcen

131
00:11:57.630 --> 00:11:58.499 A:middle
beansprucht.

132
00:11:58.500 --> 00:12:05.033 A:middle
Das bedeutet, dass jeder Service, den Sie erstellen, einen eigenen privaten Anwendungsserver implementiert.

133
00:12:05.033 --> 00:12:10.666 A:middle
Sie verwendet eine eigene Kopie der Laufzeit, die Java oder die Node.js-Laufzeit.

134
00:12:10.666 --> 00:12:13.532 A:middle
Sie erhalten eine bessere Isolation.

135
00:12:13.533 --> 00:12:18.764 A:middle
Selbst auf Betriebssystemebene ist kein einziger XS-Engine-Prozess vorhanden, in dem alle Apps innerhalb von

136
00:12:18.764 --> 00:12:19.733 A:middle
ausgeführt werden.

137
00:12:19.733 --> 00:12:25.008 A:middle
Für jeden Service, den Sie implementieren, wird ein eigener Betriebssystemprozess bereitgestellt. Wenn Sie

138
00:12:25.008 --> 00:12:30.533 A:middle
einen schlechten Ausführungsserver haben, tritt ein Service-Ausfall auf, der keine anderen Dienste übernimmt.

139
00:12:30.533 --> 00:12:37.244 A:middle
Das heißt, Sie können einzelne Services skalieren, Sie können Speicher und CPU zu zwei bestimmten Services

140
00:12:37.244 --> 00:12:44.399 A:middle
zuordnen. Wenn Sie ein Tuning für Ihr System benötigen, können Sie es sehr genau an einzelne Services anpassen.

141
00:12:44.400 --> 00:12:49.554 A:middle
Und es bedeutet auch, dass im Laufe der Zeit die Laufzeit mit jedem Service kopiert wird, wenn wir das

142
00:12:49.554 --> 00:12:53.699 A:middle
Deployment durchführen, das heißt, es ist stabil, wenn Sie Upgrades durchführen.

143
00:12:53.700 --> 00:12:59.577 A:middle
Sie können also ein Patch oder einen SPS auf Ihrem SAP-HANA-System einspielen und dann die Core-XSA-Laufzeit

144
00:12:59.577 --> 00:13:05.290 A:middle
aktualisieren. Möglicherweise ist eine neue Version von Knoten oder Java verfügbar, aber das ändert nicht

145
00:13:05.290 --> 00:13:08.066 A:middle
sofort Ihre bereits implementierten Anwendungen.

146
00:13:08.066 --> 00:13:12.532 A:middle
Erst durch den Neuaufbau und das erneute Deployment der neuen Version werden sie erneut bereitgestellt.

147
00:13:12.533 --> 00:13:18.427 A:middle
Und was genau das tun soll, geben Sie eine bessere Stabilität im Laufe der Zeit, und Sie können sich besser mit

148
00:13:18.427 --> 00:13:24.321 A:middle
System-Patches vertraut machen, wenn Sie wissen, dass Sie Ihre bereits implementierten Anwendungen nicht ändern

149
00:13:24.321 --> 00:13:29.896 A:middle
können, da Sie sie erst dann erneut deployen und erneut testen können, wenn Sie die neuen Funktionen, die

150
00:13:29.896 --> 00:13:35.366 A:middle
möglicherweise in einer aktualisierten Laufzeit bereitgestellt werden sollen, erneut testen können.

151
00:13:35.366 --> 00:13:42.035 A:middle
Der letzte Punkt, den ich hier machen möchte, ist die Änderung des Lifecycle-Managements, insbesondere die

152
00:13:42.035 --> 00:13:45.433 A:middle
Quellcode-Verwaltung in dieser Entwicklungsumgebung.

153
00:13:45.433 --> 00:13:51.520 A:middle
Heute, unabhängig davon, ob Sie XS oder Calculation Views oder gespeicherte Prozeduren ausführen, wird alles im

154
00:13:51.520 --> 00:13:53.166 A:middle
HANA-Repository gespeichert.

155
00:13:53.166 --> 00:13:59.684 A:middle
Alle Ihre Design-Zeit-Artefakte, der Quelltext, die XML-Dateien, unabhängig davon, wie sie in der

156
00:13:59.684 --> 00:14:05.666 A:middle
SAP-HANA-Datenbank von jedem System gespeichert sind, in dem sie bereitgestellt werden.

157
00:14:05.666 --> 00:14:13.366 A:middle
In dieser neuen Umgebung gehen wir davon weg, und wir gehen in die zentrale Quelltextverwaltung mit Git.

158
00:14:13.366 --> 00:14:18.032 A:middle
Für uns als Entwickler ist das jetzt eine große Veränderung konzeptionell.

159
00:14:18.033 --> 00:14:24.086 A:middle
Das bedeutet, dass der Quelltext aus dem System entfernt wird, in dem es entwickelt wurde, indem es eine

160
00:14:24.086 --> 00:14:29.499 A:middle
zentrale Kopie des Quellcodes hat. Sie lernen, über Git-Konzepte wie Verzweigung zu lernen.

161
00:14:29.500 --> 00:14:36.314 A:middle
Dabei handelt es sich um leistungsstarke Konzepte, über die wir über die openSAP-Kurse sprechen, und dass Sie

162
00:14:36.314 --> 00:14:41.066 A:middle
sich sicher sein müssen, bevor Sie die Zertifizierungsprüfung durchführen.

163
00:14:41.066 --> 00:14:47.066 A:middle
Und zusammen mit dem Konzept der Verzweigung lassen sich zwei verschiedene Versionen derselben

164
00:14:47.066 --> 00:14:53.960 A:middle
Entwicklungsartefakte im selben Entwicklungssystem pflegen, um tatsächlich funktionieren zu können. Außerdem

165
00:14:53.960 --> 00:14:57.599 A:middle
mussten wir auch Container in der Datenbank einführen.

166
00:14:57.600 --> 00:15:04.838 A:middle
Dies ist ein wichtiges neues Konzept innerhalb von HDI, der HANA Deployment Infrastructure, das es ermöglicht,

167
00:15:04.838 --> 00:15:12.076 A:middle
dieselben Berechnungssichten oder dieselben Tabellen von zwei verschiedenen Entwicklern gleichzeitig im selben

168
00:15:12.076 --> 00:15:17.999 A:middle
SAP-HANA-Entwicklungssystem zu implementieren, auch innerhalb desselben MDC-Containers.

169
00:15:18.000 --> 00:15:23.168 A:middle
Und das, was dies tun wird, legt eigentlich nur separate Schemata für den Inhalt an, damit sie sich nicht

170
00:15:23.168 --> 00:15:26.466 A:middle
gegenseitig überschreiben, und wir haben keine Namenskollisionen.

171
00:15:26.466 --> 00:15:32.229 A:middle
Die gesamte Entwicklung ist jedoch noch nicht schematisch, d. h., wir können nicht auf den Schemanamen

172
00:15:32.229 --> 00:15:38.500 A:middle
verweisen, da ansonsten das Konzept der Container unterbrochen und Ihre Datenbankentwicklungsobjekte aufgerufen

173
00:15:38.500 --> 00:15:39.066 A:middle
werden.

174
00:15:39.066 --> 00:15:44.194 A:middle
Wir müssen in der Lage sein, unabhängig in ein generiertes Schema zu verteilen und dann in unserem Coding, das

175
00:15:44.194 --> 00:15:46.433 A:middle
den Schemanamen referenziert, nichts zu haben.

176
00:15:46.433 --> 00:15:52.999 A:middle
Dies ist also auch ein Thema, das wir in den openSAP-Kursen ausführlich behandeln.

177
00:15:53.000 --> 00:15:57.867 A:middle
Wir sprechen über komplexere Szenarien, wie beispielsweise was passiert, wenn ich Inhalte in einem Container

178
00:15:57.867 --> 00:15:59.400 A:middle
und in Inhalten habe, die nicht?

179
00:15:59.400 --> 00:16:03.966 A:middle
Das wäre der Fall mit einem ERP-Schema oder einem ERP-Schema.

180
00:16:03.966 --> 00:16:10.030 A:middle
Wir sprechen darüber, wie wir komplexere Szenarien für den containerübergreifenden Zugriff einrichten, da nicht

181
00:16:10.030 --> 00:16:12.599 A:middle
alles in einem Container vorhanden sein wird.

182
00:16:12.600 --> 00:16:20.634 A:middle
Daher möchten Sie diesen Themen besondere Aufmerksamkeit widmen, denn sie sind für diese neue Umgebung von

183
00:16:20.634 --> 00:16:24.500 A:middle
großer Bedeutung, zwei, sie sind relativ komplex.

184
00:16:24.500 --> 00:16:32.666 A:middle
Es gibt viele neue Konzepte, eine Vielzahl neuer Begriffe, die die Sicherheitsaspekte des Systems verändern.

185
00:16:32.666 --> 00:16:39.736 A:middle
Sie möchten sicherstellen, dass Sie wirklich das gesamte Containerkonzept kennen, bevor Sie diese

186
00:16:39.736 --> 00:16:42.433 A:middle
Zertifizierungsprüfung durchführen.

187
00:16:42.433 --> 00:16:47.744 A:middle
Was ich hier habe, ist ein bisschen von einem architektonischen Diagramm, das zeigt, wie dies aussieht. Sie

188
00:16:47.744 --> 00:16:52.807 A:middle
wissen, dass viele Konzepte, über die ich gerade auf der vorigen Folie gesprochen habe, jetzt grafisch

189
00:16:52.807 --> 00:16:53.900 A:middle
dargestellt werden.

190
00:16:53.900 --> 00:16:56.700 A:middle
Wir sehen, dass wir die XS-Engine auf der Seite haben.

191
00:16:56.700 --> 00:17:01.700 A:middle
Sie hat einen eigenen Web Dispatcher, d.h. es hat einen eigenen HTTP-Endpunkt.

192
00:17:01.700 --> 00:17:04.133 A:middle
Mit XS advanced wird nichts gemeinsam genutzt.

193
00:17:04.133 --> 00:17:06.766 A:middle
Die beiden sind völlig unabhängig.

194
00:17:06.766 --> 00:17:13.699 A:middle
Und das XS Classic im alten HANA Repository im HANA Studio, das alles bleibt etwas länger.

195
00:17:13.700 --> 00:17:19.764 A:middle
Wir haben eine Deprekation angekündigt, die im nächsten wichtigen Release von SAP HANA nach SAP HANA 2.0 davon

196
00:17:19.764 --> 00:17:21.033 A:middle
entfernt werden wird.

197
00:17:21.033 --> 00:17:26.756 A:middle
In der Zwischenzeit bleibt sie jedoch aus Gründen der Rückwärtskompatibilität bestehen und geben Ihnen einige

198
00:17:26.756 --> 00:17:28.699 A:middle
Zeit, um Ihren Inhalt zu migrieren.

199
00:17:28.700 --> 00:17:34.255 A:middle
Was wir hier sehen, was wir hier sehen, wenn wir uns den Ablauf einer Anwendung ansehen, in die eine Anfrage

200
00:17:34.255 --> 00:17:38.884 A:middle
kommt, die zuerst wirklich kommt, nicht in diesem Diagramm, sondern der oberen Schicht des

201
00:17:38.884 --> 00:17:42.999 A:middle
XS-Advanced-Box-Felds, könnten Sie berücksichtigen, dass der Plattform-Router

202
00:17:43.000 --> 00:17:48.000 A:middle
Daher kommen alle Anfragen von dort aus und richten sich an einzelne Anwendungen.

203
00:17:48.000 --> 00:17:53.876 A:middle
Nun handelt es sich bei Ihrer individuellen Anwendung um eine Microservices-Architektur. Sie verfügen daher

204
00:17:53.876 --> 00:17:59.807 A:middle
möglicherweise über mehrere Services, die sowohl Node.js als auch Java, eventuell andere, die Laufzeit Ihrer

205
00:17:59.807 --> 00:18:02.499 A:middle
eigenen Sprache oder in SPS 03, Python, haben.

206
00:18:02.500 --> 00:18:07.275 A:middle
Aber wir möchten nicht, dass die Sicherheitsverarbeitung in jeder der beiden Ausführungszeiten durchgeführt

207
00:18:07.275 --> 00:18:07.900 A:middle
werden muss.

208
00:18:07.900 --> 00:18:14.260 A:middle
Was wir also tun, ist, dass alle Ihre individuellen Laufzeitservices einen Anwendungsrouter haben, der vor

209
00:18:14.260 --> 00:18:15.100 A:middle
ihnen fährt.

210
00:18:15.100 --> 00:18:24.387 A:middle
Dies ist nur eine von SAP ausgelieferte Node.js-Anwendung, die als Reverse-Proxy vor Ihren individuellen

211
00:18:24.387 --> 00:18:26.799 A:middle
Anwendungsservices dient.

212
00:18:26.800 --> 00:18:29.333 A:middle
Es geht also um einige Dinge.

213
00:18:29.333 --> 00:18:32.599 A:middle
Sie verfügt über die zentrale Sicherheitsverarbeitung innerhalb des Unternehmens.

214
00:18:32.600 --> 00:18:39.366 A:middle
Es wird wieder an die UAA weitergeleitet und die Anmeldung verarbeitet und die Sicherheitstokens generiert.

215
00:18:39.366 --> 00:18:44.699 A:middle
Anschließend werden diese Sicherheits-Token in die einzelnen Laufzeiten eingefügt.

216
00:18:44.700 --> 00:18:49.838 A:middle
Auf diese Weise müssen wir keine Sicherheitsverarbeitungsbibliotheken implementieren, die in jedem dieser

217
00:18:49.838 --> 00:18:54.829 A:middle
Laufzeiten implementiert sind, was insbesondere bei der Bringe Ihre eigene Sprache hilft, wo wir keine

218
00:18:54.829 --> 00:19:00.066 A:middle
Bibliotheken für jede mögliche Laufzeit schreiben können, die in die Umgebung eingebunden werden könnte.

219
00:19:00.066 --> 00:19:07.600 A:middle
Aber was wir tun, ist die Sicherheit in diese Laufzeiten als JWT Token, ein JSON-Web-Token.

220
00:19:07.600 --> 00:19:12.200 A:middle
Es handelt sich also um ein JSON-Objekt, das geparst werden kann, um die Sicherheitsinformationen zu prüfen.

221
00:19:12.200 --> 00:19:16.533 A:middle
Daher können Sie in allen diesen Umgebungen zusätzliche Sicherheitsprüfungen durchführen.

222
00:19:16.533 --> 00:19:20.633 A:middle
Sie müssen keine speziellen SAML-- oder OAuth-Verarbeitungsbibliotheken haben.

223
00:19:20.633 --> 00:19:27.831 A:middle
Sie müssen lediglich die JSON parsen können, die nur über jede Sprache oder Laufzeit verfügen wird, um einige

224
00:19:27.831 --> 00:19:34.766 A:middle
Tools oder Funktionen zu erledigen. Nun kann der Anwendungsrouter Ihren statischen HTML-Content nutzen.

225
00:19:34.766 --> 00:19:43.045 A:middle
Noch wichtiger ist er jedoch als Reverse-Proxy, d.h. der Browser sieht den Anwendungsrouter immer nur, so dass

226
00:19:43.045 --> 00:19:46.433 A:middle
seine URL oder der Port nur angezeigt wird.

227
00:19:46.433 --> 00:19:53.232 A:middle
Und der Application Router Proxy generiert alle URL-Reports der einzelnen Anwendungsservices.

228
00:19:53.233 --> 00:20:00.166 A:middle
Der Browser sieht diese nicht. Dies hilft uns auch, CORS-übergreifende Scripting-Prüfungen im Browser zu

229
00:20:00.166 --> 00:20:00.966 A:middle
vermeiden.

230
00:20:00.966 --> 00:20:07.749 A:middle
Die Browser sollen also den Endbenutzer vor einer Umleitung einer Seite, die sich intern auf eine andere

231
00:20:07.749 --> 00:20:10.032 A:middle
Website umleiten würde, schützen.

232
00:20:10.033 --> 00:20:13.299 A:middle
Denn es geht darum, wie böswillige Webstandorte Ihre Informationen steuern.

233
00:20:13.300 --> 00:20:17.912 A:middle
Sie sind der Ansicht, dass Sie zu einer vertrauenswürdigen Website zurückkehren, die sich dort befindet. Es

234
00:20:17.912 --> 00:20:20.800 A:middle
gibt jedoch einen geheimen Umlenkung auf eine schädliche Website.

235
00:20:20.800 --> 00:20:27.400 A:middle
Der Browser kann nicht wissen, dass in einem Microservices-Umfeld die anderen Sites sicher sind.

236
00:20:27.400 --> 00:20:31.442 A:middle
Jetzt gibt es einige Mechanismen, mit denen wir dem Browser mitteilen können, dass sie sicher sind, aber es ist

237
00:20:31.442 --> 00:20:34.466 A:middle
eigentlich einfacher, wenn wir diese Tatsache einfach aus dem Browser ausblenden.

238
00:20:34.466 --> 00:20:40.035 A:middle
Und das ist das, was der Anwendungsrouter uns ermöglicht. Wenn Sie nun zum Sicherheitstoken zurückkehren,

239
00:20:40.035 --> 00:20:45.870 A:middle
erinnern Sie sich, dass wir dieses Sicherheits-Token in unsere Laufzeiten eingelegt haben. Es kennt daher alle

240
00:20:45.870 --> 00:20:47.833 A:middle
Informationen zu unserem Benutzer:

241
00:20:47.833 --> 00:20:50.899 A:middle
unserem Benutzernamen, unsere E-Mail-Adresse.

242
00:20:50.900 --> 00:20:57.610 A:middle
Diese Benutzer müssen nicht länger SAP-HANA-Datenbankbenutzer sein, da wir mit einem technischen Benutzer eine

243
00:20:57.610 --> 00:21:03.100 A:middle
Verbindung zu der Datenbank von unserem Knoten oder Java Application Service herstellen.

244
00:21:03.100 --> 00:21:08.533 A:middle
Dies bietet uns also bessere technische Möglichkeiten wie das Verbindungspooling.

245
00:21:08.533 --> 00:21:12.966 A:middle
Es bedeutet auch, dass unsere Anwendungsbenutzer nicht in der Datenbank eingerichtet werden müssen.

246
00:21:12.966 --> 00:21:18.299 A:middle
Wir trennen die Idee eines Business-Benutzers von einem Datenbankbenutzer.

247
00:21:18.300 --> 00:21:24.434 A:middle
Damit ist unsere Datenbank weniger, aber gleichzeitig, wenn wir eine Verbindung zur Datenbank herstellen,

248
00:21:24.434 --> 00:21:28.933 A:middle
nehmen wir denselben JWT -Token an und geben ihn auch in die Datenbank ein.

249
00:21:28.933 --> 00:21:37.403 A:middle
Wir können diese Informationen, die im Session-Kontext in der Datenbank verfügbar sind, nach wie vor anzeigen

250
00:21:37.403 --> 00:21:42.066 A:middle
und für Berechtigungsprüfungen in der Datenbank verwenden.

251
00:21:42.066 --> 00:21:48.234 A:middle
Beispielsweise können analytische Privilegien oder strukturierte Privilegien für Berechnungssichten und CDS

252
00:21:48.234 --> 00:21:53.999 A:middle
-Views diese Informationen für instanzbasierte Filterung oder rollenbasierte Sicherheit verwenden.

253
00:21:54.000 --> 00:21:58.813 A:middle
Selbst wenn Ihr Benutzer nicht tatsächlich in der Datenbank eingerichtet ist, können wir noch

254
00:21:58.813 --> 00:22:04.455 A:middle
Berechtigungsprüfungen innerhalb der Datenbank gegen Ihren externen Benutzer vornehmen, unabhängig davon, von

255
00:22:04.455 --> 00:22:07.199 A:middle
wo aus sie aus der externen Benutzerablage kommen.

256
00:22:07.200 --> 00:22:12.403 A:middle
Es handelt sich also um etwas, das unsere Kunden gebeten haben. Sie wissen, dass Sie die Wartung vereinfachen,

257
00:22:12.403 --> 00:22:17.512 A:middle
nicht alle unsere Benutzer in der Datenbank einrichten, aber noch keine Berechtigungsprüfungen innerhalb der

258
00:22:17.512 --> 00:22:18.600 A:middle
Datenbank vornehmen.

259
00:22:18.600 --> 00:22:23.100 A:middle
Und das ist wieder einmal das Beste aus beiden Weltanfragen.

260
00:22:23.100 --> 00:22:31.868 A:middle
Daher halte ich es für sehr wichtig, dass Sie diese Beziehung zwischen dem App-Router und den einzelnen

261
00:22:31.868 --> 00:22:35.699 A:middle
Prozessen der Anwendungsservices verstehen.

262
00:22:35.700 --> 00:22:40.936 A:middle
Und es ist auch wichtig, dass dieses neue Sicherheitsmodell zu verstehen ist und wie der technische Benutzer

263
00:22:40.936 --> 00:22:45.784 A:middle
funktioniert, wie die Security-Injection funktioniert, wie wir weiterhin analytische Privilegien und

264
00:22:45.784 --> 00:22:47.966 A:middle
strukturierte Privilegien erfüllen können.

265
00:22:47.966 --> 00:22:54.049 A:middle
Das sind alles, was Sie brauchen, um ein gutes Verständnis dafür zu haben, um diese Prüfung durchführen zu

266
00:22:54.049 --> 00:22:54.566 A:middle
können.

267
00:22:54.566 --> 00:23:02.100 A:middle
Als Nächstes sehen wir nun, dass Sie die Kurse für die Prüfung vorbereiten möchten. Die Kurse sind aber auch

268
00:23:02.100 --> 00:23:03.566 A:middle
praktische Übungen.

269
00:23:03.566 --> 00:23:08.766 A:middle
Jetzt kann ich nicht genug betonen, wie wichtig es ist, praktische Erfahrungen zu machen.

270
00:23:08.766 --> 00:23:14.501 A:middle
Nun werden keine Fragen, die sich auf der Prüfung befinden, unbedingt erforderlich sein, um den praktischen

271
00:23:14.501 --> 00:23:15.466 A:middle
Nutzen zu haben.

272
00:23:15.466 --> 00:23:20.932 A:middle
Es geht nicht darum, Sie wie folgt zu fragen: Was haben Sie in dieser Übung gemacht?

273
00:23:20.933 --> 00:23:23.066 A:middle
Sie wissen, dass das nicht so aussehen wird.

274
00:23:23.066 --> 00:23:31.971 A:middle
Aber die praktischen Übungen sind so wichtig, wie ich meine, die Begriffe konkret konkret zu gestalten und

275
00:23:31.971 --> 00:23:35.332 A:middle
Ihnen helfen zu können, worum es geht.

276
00:23:35.333 --> 00:23:41.266 A:middle
Sie wissen, dass wir als Entwickler wissen, bis wir sitzen, und wir verwenden die Tools, und wir entwickeln

277
00:23:41.266 --> 00:23:47.033 A:middle
etwas, wir sehen es, und wir können es dann in der Datenbank abfragen. So ist es einfach nur abstrakt.

278
00:23:47.033 --> 00:23:53.250 A:middle
Und obwohl Sie die Prüfung mit abstraktem Wissen weitergeben können, können Sie die Prüfung erheblich

279
00:23:53.250 --> 00:23:59.099 A:middle
beschleunigen, wenn Sie mit allen neuen Konzepten auch konkrete Erfahrungen mit sich bringen.

280
00:23:59.100 --> 00:24:05.100 A:middle
Und deshalb bieten wir praktische Übungen mit ausführlichen Übungen an.

281
00:24:05.100 --> 00:24:10.332 A:middle
Und auch wenn Sie keinen Zugriff auf ein System haben, möchte ich Sie herzlich bitten, den praktischen

282
00:24:10.332 --> 00:24:11.666 A:middle
Übungsdokument zu lesen.

283
00:24:11.666 --> 00:24:17.833 A:middle
Es ist sehr detailliert, es sind viele Screenshots, und Sie können eine Tonne nur lesen, wenn Sie sie lesen.

284
00:24:17.833 --> 00:24:26.120 A:middle
Wenn Sie die Übungen durchführen möchten und keinen Zugriff haben, wie Ihr Unternehmen kein HANA-2.0-System mit

285
00:24:26.120 --> 00:24:32.466 A:middle
XSA und SAP Web IDE bereitstellt, können Sie die SAP HANA Express Edition aufrufen.

286
00:24:32.466 --> 00:24:39.266 A:middle
HANA express ist eine vereinfachte Installation von SAP HANA, die auf dem eigenen Laptop oder Desktop-Computer

287
00:24:39.266 --> 00:24:45.757 A:middle
eines Entwicklers installiert werden soll, und es benötigt einen minimalen Speicherbedarf, wie etwa 16 GB

288
00:24:45.757 --> 00:24:46.499 A:middle
Speicher.

289
00:24:46.500 --> 00:24:49.933 A:middle
Es handelt sich also um einen akzeptablen Betrag. Sie wissen, dass es sehr hoch ist.

290
00:24:49.933 --> 00:24:55.186 A:middle
Nicht alle sind mit diesem Betrag verbunden, aber es gibt viele Möglichkeiten, und es ist möglich, eine

291
00:24:55.186 --> 00:24:57.532 A:middle
Maschine zu bekommen, die diesen Betrag hat.

292
00:24:57.533 --> 00:25:01.699 A:middle
Es sind jedoch vollständige HANA-Funktionen verfügbar. Sie können alle Übungen darin ausführen.

293
00:25:01.700 --> 00:25:06.590 A:middle
Sie könnten sogar produktive Anwendungen erstellen, d. h. Sie können sie in Betrieb nehmen oder erneut

294
00:25:06.590 --> 00:25:07.166 A:middle
verkaufen.

295
00:25:07.166 --> 00:25:10.766 A:middle
Bis zu 32 GB Speicher in diesem Umfeld.

296
00:25:10.766 --> 00:25:16.857 A:middle
Jetzt bieten wir dies als Binärinstallation an, wenn Sie bereits über ein eigenes Linux-Betriebssystem

297
00:25:16.857 --> 00:25:23.485 A:middle
verfügen, das Sie selbst installieren können, oder mehr Personen wählen Sie Option B, eine voll entwickelte VM,

298
00:25:23.485 --> 00:25:29.099 A:middle
eine Virtual Machine, die Sie auf Ihrem eigenen System in einem VM Player ausführen können.

299
00:25:29.100 --> 00:25:35.626 A:middle
Damit Sie nicht über ein ... verfügen müssen, können Sie ein Host-Betriebssystem von Windows oder Mac haben und

300
00:25:35.626 --> 00:25:38.566 A:middle
dann die gesamte Virtual Machine dort ausführen.

301
00:25:38.566 --> 00:25:40.999 A:middle
Das ist eine sehr attraktive Option.

302
00:25:41.000 --> 00:25:43.666 A:middle
Die dritte Möglichkeit bieten wir in der Cloud.

303
00:25:43.666 --> 00:25:51.439 A:middle
Wenn Sie keinen Rechner mit den erforderlichen 16 GB Speicher haben, können Sie ihn in der Cloud ausführen. Wir

304
00:25:51.439 --> 00:25:58.932 A:middle
machen sie in Google Cloud, Azure, AWS verfügbar, sodass es viele Optionen gibt. Das werden Sie jetzt etwas

305
00:25:58.932 --> 00:25:59.633 A:middle
kosten.

306
00:25:59.633 --> 00:26:05.166 A:middle
HANA express selbst ist kostenlos, es gibt keine Lizenzkosten, bis zu 32 GB Speicher, aber wenn Sie es in der

307
00:26:05.166 --> 00:26:10.699 A:middle
Cloud ausführen werden, müssen Sie den Cloud-Anbieter für jede Hardware bezahlen, die Sie gerade ausführen.

308
00:26:10.700 --> 00:26:17.100 A:middle
Sie zahlen SAP also nicht, aber Sie zahlen den Cloud-Anbieter für die Zeit, in der Sie es laufen lassen.

309
00:26:17.100 --> 00:26:21.200 A:middle
Es gibt jedoch nur wenige Ausnahmen, die Sie verwenden.

310
00:26:21.200 --> 00:26:26.166 A:middle
Fahren Sie mit anderen Zeiten herunter und bezahlen Sie nur die Stunden, die Sie benötigen.

311
00:26:26.166 --> 00:26:31.566 A:middle
Und der letzte Punkt, den ich machen möchte, ist in dieser neuen Entwicklungsumgebung, die wir nicht mehr im

312
00:26:31.566 --> 00:26:32.766 A:middle
SAP-HANA-Studio haben.

313
00:26:32.766 --> 00:26:40.287 A:middle
SAP HANA Studio ist nicht kompatibel zu Git-based development, with HDI, with XS advanced. Sie versteht keine

314
00:26:40.287 --> 00:26:42.633 A:middle
der neuen Entwicklungsartefakte.

315
00:26:42.633 --> 00:26:45.233 A:middle
Sie kann nur absolut nicht verwendet werden.

316
00:26:45.233 --> 00:26:50.233 A:middle
Das neue Entwicklungswerkzeug, das wir haben, ist die SAP Web IDE für SAP HANA.

317
00:26:50.233 --> 00:26:56.133 A:middle
Jetzt handelt es sich um eine browserbasierte Entwicklungsumgebung, die die gesamte Bandbreite der

318
00:26:56.133 --> 00:26:57.699 A:middle
HANA-Funktionen abdeckt:

319
00:26:57.700 --> 00:27:04.323 A:middle
Modellierung, Calculation Views, CDS, Stored Procedures, verfügt aber auch über sehr umfangreiche

320
00:27:04.323 --> 00:27:11.766 A:middle
Entwicklungsfunktionen für Node.js und Java-Entwicklung sowie für die Entwicklung von SAPUI5 und SAP Fiori.

321
00:27:11.766 --> 00:27:13.866 A:middle
Und es ist eine vollständige Git-Integration.

322
00:27:13.866 --> 00:27:20.599 A:middle
Also, sowohl das HANA Studio als auch die webbasierte Development Workbench von SAP HANA, fügt neue Funktionen

323
00:27:20.599 --> 00:27:26.599 A:middle
hinzu, die wir bisher nicht hatten, und unterstützt alle neuen Programmiermodelle voll und ganz.

324
00:27:26.600 --> 00:27:32.730 A:middle
Daher müssen Sie, wie Sie die Zertifizierungsprüfung durchführen, mit der SAP Web IDE für SAP HANA vertraut

325
00:27:32.730 --> 00:27:39.032 A:middle
sein, welche Entwicklungsansätze dort zur Verfügung stehen, wie das Tooling in dieser Umgebung funktioniert.

326
00:27:39.033 --> 00:27:44.826 A:middle
Nur Kenntnis von SAP HANA Studio oder der Web-based Development Workbench reicht nicht aus, um die

327
00:27:44.826 --> 00:27:47.132 A:middle
Zertifizierungsprüfung zu übertragen.

328
00:27:47.133 --> 00:27:55.066 A:middle
Mit den openSAP-Kursen erhalten Sie eine hervorragende Einführung in SAP Web IDE für SAP HANA.

329
00:27:55.066 --> 00:28:01.828 A:middle
Ich hoffe daher, dass ich mit dieser kleinen Anzahl der Kurse, die ich Ihnen bei der Vorbereitung der

330
00:28:01.828 --> 00:28:08.792 A:middle
Zertifizierungsprüfung behilflich sein möchte, oder einige Review-Punkte, die Sie gut vorbereitet haben,

331
00:28:08.792 --> 00:28:10.199 A:middle
unterstützt haben.

332
00:28:10.200 --> 00:28:17.678 A:middle
Für alle, die beabsichtigen, die Zertifizierungsprüfung zu prüfen, wünsche ich Ihnen Glück und freue mich

333
00:28:17.678 --> 00:28:25.300 A:middle
darauf, alle neuen zertifizierten HANA-Entwickler zu sehen, die wir in Zukunft in der Gemeinschaft haben.
