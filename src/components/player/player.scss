@use "sass:meta";
@use "../../utils/variables.scss";

:host {
  display: block;
  color: var(--vp-main-color);
  background: rgba(var(--vp-bg-color-rgb), 0.75);
  border: 1px solid var(--vp-bg-color);

  font-family:
    // Basic web for OS and iOS (ensures monospaced digits)
    "Helvetica Neue",
    // Safari for OS X and iOS (San Francisco)
    -apple-system,
    // Chrome < 56 for OS X (San Francisco)
    BlinkMacSystemFont,
    // Windows
    "Segoe UI",
    // Android
    "Roboto",
    // Linux
    "Ubuntu",
    "Cantarell",
    // Basic web fallback
    Helvetica,
    Arial,
    sans-serif;
}

.player {
  display: flex;
  flex: 1 0 auto;
  flex-flow: row nowrap;
  flex-direction: column;
  position: relative;

  width: 100%;
  height: 100%;

  xm-screen {
    flex-grow: 1;

    ::slotted(*) {
      height: 100%;
    }
  }
}

:host(.player--pseudo-fullscreen) {
  position: fixed;

  // Respect iOS safe areas
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;

  padding-top: env(safe-area-inset-top);
  padding-right: env(safe-area-inset-right);
  padding-bottom: env(safe-area-inset-bottom);
  padding-left: env(safe-area-inset-left);

  max-width: calc(
    100vw - env(safe-area-inset-left) - env(safe-area-inset-right)
  );
  max-height: calc(
    100vh - env(safe-area-inset-top) - env(safe-area-inset-bottom)
  );

  z-index: variables.$z-index-top;
  background: black;
}

@include meta.load-css("vars");

.loading {
  animation: 0s linear 750ms forwards delayedShow;
  visibility: hidden;

  position: absolute;
  inset: 0;
  margin-bottom: 46px;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.5);

  z-index: variables.$z-index-m;

  &--fullscreen-mode {
    margin-bottom: 55px;
  }

  &__spinner {
    fill: currentColor;
    position: relative;
    width: 70px;
    height: 70px;
    animation: spinner 1.3s linear infinite;
  }

  @keyframes spinner {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes delayedShow {
    to {
      visibility: visible;
    }
  }
}
