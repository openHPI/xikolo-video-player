/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface XmfVideo {
    'controls': boolean;
    'getDuration': () => Promise<number>;
    'load': (id: number) => Promise<void>;
    'pause': () => Promise<void>;
    'play': () => Promise<void>;
    'src': number;
    'type': string;
  }
  interface XmfVideoPlayer {
    '_exitFullscreen': () => Promise<void>;
    '_requestFullscreen': () => Promise<void>;
    'pause': () => Promise<[any, any]>;
    'play': () => Promise<[any, any]>;
    'src': string;
  }
}

declare global {


  interface HTMLXmfVideoElement extends Components.XmfVideo, HTMLStencilElement {}
  var HTMLXmfVideoElement: {
    prototype: HTMLXmfVideoElement;
    new (): HTMLXmfVideoElement;
  };

  interface HTMLXmfVideoPlayerElement extends Components.XmfVideoPlayer, HTMLStencilElement {}
  var HTMLXmfVideoPlayerElement: {
    prototype: HTMLXmfVideoPlayerElement;
    new (): HTMLXmfVideoPlayerElement;
  };
  interface HTMLElementTagNameMap {
    'xmf-video': HTMLXmfVideoElement;
    'xmf-video-player': HTMLXmfVideoPlayerElement;
  }
}

declare namespace LocalJSX {
  interface XmfVideo extends JSXBase.HTMLAttributes<HTMLXmfVideoElement> {
    'controls'?: boolean;
    'onPlay'?: (event: CustomEvent<any>) => void;
    'src'?: number;
    'type'?: string;
  }
  interface XmfVideoPlayer extends JSXBase.HTMLAttributes<HTMLXmfVideoPlayerElement> {
    'src'?: string;
  }

  interface IntrinsicElements {
    'xmf-video': XmfVideo;
    'xmf-video-player': XmfVideoPlayer;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


